
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "EQUALS GE ID IN K_FOR K_FOREACH K_IF K_PRINT LE NOTEQUALS NUMtemplate : comandoscomandos : comandos comandocomandos : comando : declaracaodeclaracao : '$' ID '$' declaracao : NUMcomando : ciclociclo : K_FOR '(' declaracao ')' '{' comandos '}'ciclo : K_FOREACH ID IN ID '{' comandos '}'comando : condicaocondicao : K_IF '(' cond ')' '{' comandos '}' cond : declaracao '>' declaracaocond : declaracao '<' declaracaocond : declaracao GE declaracaocond : declaracao LE declaracaocond : declaracao EQUALS declaracaocond : declaracao NOTEQUALS declaracaocomando : printprint : K_PRINT '(' declaracao ')'print : K_PRINT ID"
    
_lr_action_items = {'$':([0,2,3,4,5,6,7,9,14,15,17,18,19,20,29,30,31,32,33,34,35,36,37,38,45,46,47,48,49,50,],[-3,8,-2,-4,-7,-10,-18,-6,20,8,8,8,-20,-5,8,8,8,8,8,8,-19,-3,-3,-3,8,8,8,-8,-9,-11,]),'NUM':([0,2,3,4,5,6,7,9,15,17,18,19,20,29,30,31,32,33,34,35,36,37,38,45,46,47,48,49,50,],[-3,9,-2,-4,-7,-10,-18,-6,9,9,9,-20,-5,9,9,9,9,9,9,-19,-3,-3,-3,9,9,9,-8,-9,-11,]),'K_FOR':([0,2,3,4,5,6,7,9,19,20,35,36,37,38,45,46,47,48,49,50,],[-3,10,-2,-4,-7,-10,-18,-6,-20,-5,-19,-3,-3,-3,10,10,10,-8,-9,-11,]),'K_FOREACH':([0,2,3,4,5,6,7,9,19,20,35,36,37,38,45,46,47,48,49,50,],[-3,11,-2,-4,-7,-10,-18,-6,-20,-5,-19,-3,-3,-3,11,11,11,-8,-9,-11,]),'K_IF':([0,2,3,4,5,6,7,9,19,20,35,36,37,38,45,46,47,48,49,50,],[-3,12,-2,-4,-7,-10,-18,-6,-20,-5,-19,-3,-3,-3,12,12,12,-8,-9,-11,]),'K_PRINT':([0,2,3,4,5,6,7,9,19,20,35,36,37,38,45,46,47,48,49,50,],[-3,13,-2,-4,-7,-10,-18,-6,-20,-5,-19,-3,-3,-3,13,13,13,-8,-9,-11,]),'$end':([0,1,2,3,4,5,6,7,9,19,20,35,48,49,50,],[-3,0,-1,-2,-4,-7,-10,-18,-6,-20,-5,-19,-8,-9,-11,]),'}':([3,4,5,6,7,9,19,20,35,36,37,38,45,46,47,48,49,50,],[-2,-4,-7,-10,-18,-6,-20,-5,-19,-3,-3,-3,48,49,50,-8,-9,-11,]),'ID':([8,11,13,22,],[14,16,19,27,]),')':([9,20,21,23,25,39,40,41,42,43,44,],[-6,-5,26,28,35,-12,-13,-14,-15,-16,-17,]),'>':([9,20,24,],[-6,-5,29,]),'<':([9,20,24,],[-6,-5,30,]),'GE':([9,20,24,],[-6,-5,31,]),'LE':([9,20,24,],[-6,-5,32,]),'EQUALS':([9,20,24,],[-6,-5,33,]),'NOTEQUALS':([9,20,24,],[-6,-5,34,]),'(':([10,12,13,],[15,17,18,]),'IN':([16,],[22,]),'{':([26,27,28,],[36,37,38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'template':([0,],[1,]),'comandos':([0,36,37,38,],[2,45,46,47,]),'comando':([2,45,46,47,],[3,3,3,3,]),'declaracao':([2,15,17,18,29,30,31,32,33,34,45,46,47,],[4,21,24,25,39,40,41,42,43,44,4,4,4,]),'ciclo':([2,45,46,47,],[5,5,5,5,]),'condicao':([2,45,46,47,],[6,6,6,6,]),'print':([2,45,46,47,],[7,7,7,7,]),'cond':([17,],[23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> template","S'",1,None,None,None),
  ('template -> comandos','template',1,'p_template','pandoc_sin.py',38),
  ('comandos -> comandos comando','comandos',2,'p_comandos','pandoc_sin.py',41),
  ('comandos -> <empty>','comandos',0,'p_comandos_empty','pandoc_sin.py',44),
  ('comando -> declaracao','comando',1,'p_comando_declaracao','pandoc_sin.py',47),
  ('declaracao -> $ ID $','declaracao',3,'p_declaracao_ID','pandoc_sin.py',50),
  ('declaracao -> NUM','declaracao',1,'p_declaracao_NUM','pandoc_sin.py',54),
  ('comando -> ciclo','comando',1,'p_comando_ciclo','pandoc_sin.py',58),
  ('ciclo -> K_FOR ( declaracao ) { comandos }','ciclo',7,'p_ciclo_for','pandoc_sin.py',61),
  ('ciclo -> K_FOREACH ID IN ID { comandos }','ciclo',7,'p_ciclo_foreach','pandoc_sin.py',67),
  ('comando -> condicao','comando',1,'p_comando_condicao','pandoc_sin.py',74),
  ('condicao -> K_IF ( cond ) { comandos }','condicao',7,'p_condicao','pandoc_sin.py',77),
  ('cond -> declaracao > declaracao','cond',3,'p_cond_maior','pandoc_sin.py',83),
  ('cond -> declaracao < declaracao','cond',3,'p_cond_menor','pandoc_sin.py',89),
  ('cond -> declaracao GE declaracao','cond',3,'p_cond_GE','pandoc_sin.py',95),
  ('cond -> declaracao LE declaracao','cond',3,'p_cond_LE','pandoc_sin.py',101),
  ('cond -> declaracao EQUALS declaracao','cond',3,'p_cond_EQUALS','pandoc_sin.py',107),
  ('cond -> declaracao NOTEQUALS declaracao','cond',3,'p_cond_NOTEQUALS','pandoc_sin.py',113),
  ('comando -> print','comando',1,'p_comando_print','pandoc_sin.py',119),
  ('print -> K_PRINT ( declaracao )','print',4,'p_print_declaracao','pandoc_sin.py',122),
  ('print -> K_PRINT ID','print',2,'p_print_id','pandoc_sin.py',126),
]
